version: '3'
#docker-compose -f ./docker-compose.yml up or docker-compose up
name: python-django-api
services:
  
  cache:
    image: redis:6.2-alpine
    container_name: redis-local
    restart: always
    ports:
      - '6379:6379'
    # command: redis-server --save 20 1 --loglevel warning --requirepass MTIzNA==
    volumes: 
      - cache:/data
    networks:
      - bridge
  
  # MongoDB is a NoSQL database service with seamless performance and options for scaling. It uses a JSON-like storage model and doesnâ€™t require a predefined database schema. 
  # docker run -d -p 27017:27017 --name mongo-local -e MONGO_INITDB_ROOT_USERNAME=postgres -e MONGO_INITDB_ROOT_PASSWORD=1234 mongo:latest
  mongo:
    image: mongo
    container_name: mongo-local
    ports:
      - '27017:27017'
    restart: always
    logging:
      options:
        max-size: 1g
    environment:
      - MONGO_INITDB_ROOT_USERNAME=postgres
      - MONGO_INITDB_ROOT_PASSWORD=1234
      - MONGO_INITDB_DATABASE=test
    networks:
      - bridge
 
        
  # docker run --name postgres-local -e POSTGRES_PASSWORD=1234 -p 15432:5432 -d postgres
  postgres:
    image: postgres
    container_name: postgres-local
    ports:
      - 15432:5432
    restart: always
    volumes:
      # - ./backup:/var/lib/postgresql/data
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: postgres
    networks:
      - bridge
      
  fn-django-search-api:
    image: fn-django-search-api:es
    container_name: fn-django-search-api
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    ports:
      - 9991:9999
    volumes:
      - ${PROJECTS_DIR}/python-django:/app/FN-Django-Services
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:1234@host.docker.internal:15432/postgres
      - ES_HOST=http://host.docker.internal:9209
      - RABBIT_HOST=host.docker.internal
      - PUBLISH_QUEUE=fastapi_publish_queue
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
      - REDIS_DATABASE=0
    networks:
      - bridge

  fn-django-search-api-test:
    image: fn-django-search-api:test
    container_name: fn-django-search-api-test
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    ports:
      - 9992:9999
    volumes:
      - ${PROJECTS_DIR}/python-django:/app/FN-Django-Services
    environment:
      - DATABASE_URL=postgresql://postgres:1234@host.docker.internal:15432/postgres
      - ES_HOST=http://host.docker.internal:9209
      - RABBIT_HOST=host.docker.internal
      - PUBLISH_QUEUE=fastapi_publish_queue
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
      - REDIS_DATABASE=0
    networks:
      - bridge

networks:
  bridge:
    driver: bridge